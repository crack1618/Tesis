sql server name :localhost\SQLEXPRESS
user SA
pass  a1s2d3

Tesis:

Para el modelo de la bd se usa un enfoque de primero modelo creando el modelo de la base de datos con entity frameowkr

(Providing personalized web services by means of contrext-aware spoken dialog systems, David griol)
-modulo para saber qué debería de estar disponible para quién y dónde y cuándo debería de estar disponible
-perfil contextual de los dispositivos
-perfil de los usuarios(preferencias, atributos)
-filtrado de información individual de usuario
-modulo de manejo de errores y comportamientos espontaneos
-tomar en cuenta los datos históricos de las acciones del usuario, también las secuencias de las interacciones que realiza el usuario.

(context aware agents for user oriented web services discovery and execution)
- usan agentes que escuchan todo el tiempo las entradas de texto de un usuario y correlacionan las entradas de texto y genera una consulta para buscar servicios web locales o en red.
-manejador de perfil de usuario

(towared a model of collaborative information behavior in organizations)
-presentan CIB [collaborative information behavior] which covers 3 conceptos importatntes: búsqueda de información collaborativa, recuperación, y uso.
-ref(fig 2 individual behavior vs collaborative behavior)

FOR STATE OF THE ART

(2013, Modelling regulated social spaces for groupware applications[MARS])
[Modelo contextual]
Mars es un modelo de regulacion y lenguaje asociado, ayuda a modelar la actividad soportada por herramientas groupware. En este modelo las interacciones toman lugar en un espacio llamado arena, cada interacción se representa mediante un escenario que describe de que forma se llevara a cabo dicha interacción, quiénes participan y los objetos involucrados, además se defininen condiciones y precondiciones para que este escenario se lleve a cabo; en esta arena están presentes actores que realiza acciones, durante esta actividad se manejan o producen objetos; actores y objetos pertenecesn a familias y juegan diferentes papeles o roles. Dado que los miembros de un grupo colaborativo pueden ser también parte de otro diferente, se definen Vistas que determinan los actores, objetos e interacciones que una arena puede compartir con otra.
[lenguaje de regulación]
Para describir escenarios cn el modelo MARS proponen un lenguaje llamado CORAL[Collaborative Regulation Language] que toma en cuenta tres aspectos de los escenarios definidos en MARS especificados en las pre y pos condiciones de la interacción: quién puede participar en la interacción, qué objetos pueden ser manipulados, qué rol tiene un actor u objeto durante la interaccióny en casos similares, referencias a otros escenarios. Con esto se define el lenguaje CoRaL con la siguiente sintaxis descrita en noteación BNF. Siendo E el conjunto de elementos de cadenas de nombres de arenas, actores, familias de actores, familias de objetos, objetos y roles:
    <sentencia> ::= <expresión><operador><expresión>";"
    <expresión> ::= <palabraReservada>":{"<elementos>"}"
    <expresión> ::= !<palabraReservada>":{"<elementos>"}"
    <operador> ::= :: | ->
    <palabraReservada> ::= "Arena" | "Interacción" | "Actor" | "Familia de actor" | "Familia de Objeto" | "Objeto" | "Rol"
    <elemento> ::= cualquier cadena en E

(2013, Ontology based agent for software process developement)

ontology based agent; context: Software process developement. Monitorea y reconoce la ejecución de tareas de los desarrolladores para facilitar la ejecución de las mismas tareas en un futuro cercano. Basada en un sistema multiagente donde usan agentes cliente y agentes de servicio.

Ontología: usa 3 tipos de ontología: la primera llamada de alto nivel que incluye una ontología contextual y, opcionalmente, procesos de software. La segunda llamada de integración, ubicada entre la ontología de nivel más alto y las ontologías de los sensores, conecta los datos obtenidos por los sensores en la arquitectura. La última ontología, de los sensores, se ubica en el nivel más bajo, y está presente en cada uno de los sensores, estas ontologías deben de heredar características de la ontología de integración.

Además de estás capas ontológicas, se encuentra un mecanismo de inferencia que ejecuta consultas en ontologías, 

-----------------------------------------------------------

https://github.com/rysi/serviciosdered/downloads

http://localhost:26626/SrvSROSI.svc/GetEstudiante/2
--------------------------------------------------------------

Data Source=localhost\SQLEXPRESS;Initial Catalog=prueba;Persist Security Info=True;User ID=SA;Password=a1s2d3

===================================================================================


pantallas prototipo
dar de alta casos
cambiar diseño de diagrama bd
cambiar diseño de arquitectura, y desarrollar el motor de razonamiento

_===================================================================================

intro primero contexto de problema ("groupware, dominio especifico..." - "para añadir CA ..." - "parte de un prototipo implementado parcialmente...")

autómata


interacciones:

jugador se mueve
jugador salta
jugador dispara arma
jugador recarga arma
jugador cambia de arma
jugador obtiene salud

jugador obtiene protección
jugador obtiene munición
jugador envia mensaje
jugador envia mensaje de voz predefinido
jugador elige arma inicial
jugador cambia apariencia de personaje
jugador cambia rol
jugador se agacha
jugador se suicida
jugador es eliminado
jugador elimina oponente
jugador reaparece
jugador captura bandera
jugador regresa bandera a su base
jugador ve mapa
jugador ve puntuaciones
jugador elige modo de juego
jugador vota por modo de juego

//el programa se cierra al preionar f12

===================================================================================================

to do : 
elimiar antecedentes
agregar estado del arte 
----------------------------------------------------------
nuevas referencias

"The What, Who, Where, when, Why and How of Context-awareness"

three aspects for context aware behaviour for applications:
    - presentation of information and services to a user
    - automatic execution of a service
    - tagging of context to information for later retrieval

Challenges in CA computing
    - development of a taxonomy and uniform representation of context types
    - development of infrastructures topromote the design, implementation and evolution of CA apps
    - discovery of compelling CA apps that assist our everyday interactions with ubiquitous computational services

@inproceedings{Morse:2000:WC:633292.633518,
 author = {Morse, David R. and Armstrong, Stephen and Dey, Anind K.},
 title = {The What, Who, Where, when, Why and How of Context-awareness},
 booktitle = {CHI '00 Extended Abstracts on Human Factors in Computing Systems},
 series = {CHI EA '00},
 year = {2000},
 isbn = {1-58113-248-4},
 location = {The Hague, The Netherlands},
 pages = {371--371},
 numpages = {1},
 url = {http://doi.acm.org/10.1145/633292.633518},
 doi = {10.1145/633292.633518},
 acmid = {633518},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {context, context-awareness, metadata, ubiquitous computing, wearable computing.},
} 


