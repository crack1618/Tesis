técnicas de inferencia de contexto:
-probabilisticas
-machine learning
-autómata de estados finita

Tesis:

Para el modelo de la bd se usa un enfoque de primero modelo creando el modelo de la base de datos con entity frameowkr

(Providing personalized web services by means of contrext-aware spoken dialog systems, David griol)
-modulo para saber qué debería de estar disponible para quién y dónde y cuándo debería de estar disponible
-perfil contextual de los dispositivos
-perfil de los usuarios(preferencias, atributos)
-filtrado de información individual de usuario
-modulo de manejo de errores y comportamientos espontaneos
-tomar en cuenta los datos históricos de las acciones del usuario, también las secuencias de las interacciones que realiza el usuario.

(context aware agents for user oriented web services discovery and execution)
- usan agentes que escuchan todo el tiempo las entradas de texto de un usuario y correlacionan las entradas de texto y genera una consulta para buscar servicios web locales o en red.
-manejador de perfil de usuario

(towared a model of collaborative information behavior in organizations)
-presentan CIB [collaborative information behavior] which covers 3 conceptos importatntes: búsqueda de información collaborativa, recuperación, y uso.
-ref(fig 2 individual behavior vs collaborative behavior)

(annother)

to take into acount: 
¿A quién mostrar información o ayudar? triggers que se disparen cuando el nivel de presencia social o habilidad de algún usuario sea bajo.
¿cómo mostrarle la información? saber la locación física y/o lógica del usuario y saber en qué widgets o interfaces desplegar la información, o en todo caso saber qué comandos ejecutar.
¿qué información mostrar o qué instrucción ejecutar? saber el tipo de awareness que necesita y en base a esto mostrar la información que sea de ayuda al usuario. O en otro caso saber que comando ejecutar para poder adaptar el sistema para que mejorela participación del usuario.

context retrieval
-listeners which are going to intercept data from clients or other equipment

context management
- modulo para registrar datos de la aplicación, es decir eventos, ejecuciones, vistas(para desplegar información).
- modulo para registrar la información del usuario(id, ).
- módulo para registrar la informaación dekl dispositivo.

FOR MARCO TEÓRICO

en la siguiente tabla hecha por (Farouk Belkadi,n, Eric Bonjour, Mauricio Camargob, Nad ege Troussier, Benoit Eynard, Situation model to suport awarness in collaboration design, 2013) se muestra la suma de un estudio sobre awareness.(tabla 1)

    awareness           question
    social awareness    -what should I expect from other members of this group?
                        -how will I intetract with this group?
                        -what role will i take in this group?
                        -What roles will the other members of the gropu assume?

    Task Awarenees      -What do I know about this topic and the structure of the task?
                        -What do others know about this topic and task?
                        -What steps must we take to complete the task?
                        -how be the outcome be evaluated?
                        -what tools/materials are nedded to complete the task?
                        -how much time is required? how much time is available
                        .
                        .
                        .

(Nardi, B., 1996. Studying context: a comparison of activity theory, situated action models and distributed cognition.) compares 3

FOR STATE OF THE ART

(2013, Modelling regulated social spaces for groupware applications[MARS])
[Modelo contextual]
Mars es un modelo de regulacion y lenguaje asociado, ayuda a modelar la actividad soportada por herramientas groupware. En este modelo las interacciones toman lugar en un espacio llamado arena, cada interacción se representa mediante un escenario que describe de que forma se llevara a cabo dicha interacción, quiénes participan y los objetos involucrados, además se defininen condiciones y precondiciones para que este escenario se lleve a cabo; en esta arena están presentes actores que realiza acciones, durante esta actividad se manejan o producen objetos; actores y objetos pertenecesn a familias y juegan diferentes papeles o roles. Dado que los miembros de un grupo colaborativo pueden ser también parte de otro diferente, se definen Vistas que determinan los actores, objetos e interacciones que una arena puede compartir con otra.
[lenguaje de regulación]
Para describir escenarios cn el modelo MARS proponen un lenguaje llamado CORAL[Collaborative Regulation Language] que toma en cuenta tres aspectos de los escenarios definidos en MARS especificados en las pre y pos condiciones de la interacción: quién puede participar en la interacción, qué objetos pueden ser manipulados, qué rol tiene un actor u objeto durante la interaccióny en casos similares, referencias a otros escenarios. Con esto se define el lenguaje CoRaL con la siguiente sintaxis descrita en noteación BNF. Siendo E el conjunto de elementos de cadenas de nombres de arenas, actores, familias de actores, familias de objetos, objetos y roles:
    <sentencia> ::= <expresión><operador><expresión>";"
    <expresión> ::= <palabraReservada>":{"<elementos>"}"
    <expresión> ::= !<palabraReservada>":{"<elementos>"}"
    <operador> ::= :: | ->
    <palabraReservada> ::= "Arena" | "Interacción" | "Actor" | "Familia de actor" | "Familia de Objeto" | "Objeto" | "Rol"
    <elemento> ::= cualquier cadena en E

(2013, Ontology based agent for software process developement)

ontology based agent; context: Software process developement. Monitorea y reconoce la ejecución de tareas de los desarrolladores para facilitar la ejecución de las mismas tareas en un futuro cercano. Basada en un sistema multiagente donde usan agentes cliente y agentes de servicio.

Ontología: usa 3 tipos de ontología: la primera llamada de alto nivel que incluye una ontología contextual y, opcionalmente, procesos de software. La segunda llamada de integración, ubicada entre la ontología de nivel más alto y las ontologías de los sensores, conecta los datos obtenidos por los sensores en la arquitectura. La última ontología, de los sensores, se ubica en el nivel más bajo, y está presente en cada uno de los sensores, estas ontologías deben de heredar características de la ontología de integración.

Además de estás capas ontológicas, se encuentra un mecanismo de inferencia que ejecuta consultas en ontologías, 

servidor: localhost\SQLEXPRESS
auth: SQL server
usr: SA
contraseña: a1s2d3
-----------------------------------------------------------
http://github.com/
https://github.com/servkey/coral.git -for tortoise git


crear rama nueva a partir de rama develop [create branch]
crear plataforma OSAX-SMG
tortoise git - add
carpeta para scripts, 
omitir dll, ejecutables y binarios.
commit
rebase

-----------------------------------------------------------

ledeer automaton:

0:{reserved tokens}
1:{error state}
2:{'(':2, '¬':2, 'EXIT':8, RESERVED:3, NOT_VALUATED:1}
3:{REFERENCE:4, ')':8, '\n'[AND NO PARENTESIS STORED]:11,  NOT_VALUED:1}
4:{'{':5, NOT_VALUED: 1}
5:{'"'[OPEN QUOTATION]:6, NOT_VALUED: 1}
6:{STRING:6, '"'[CLOSE QUOTATION]:7, NOT_VALUED: 1}
7:{'}':8, NOT_VALUED: 1}
8:[ACCEPT]{')':8[IF PARENT MATCHES REMOVE OPPAR, ELSE 1], REFERENCE:9, BELONG:10, EXECUTE:10, '\n'[&& NO PARENTESIS]:11[AND ACCEPT!], NOT_VALUED: 1}
9:{BACK TO 2}
10:{'(':2, '¬':2, RESERVED:3, NOT_VALUED: 1}
11:[ACCEPT]{goto: 1?????????}

--------------------------------------------------------------
https://github.com/rysi/serviciosdered/downloads

http://localhost:26626/SrvSROSI.svc/GetEstudiante/2
--------------------------------------------------------------
for def design

librerías para js
-sugarjs accceso fácil a fuentes json o arreglos
-jquery
-jqgrid construccion de grids del lado del cliente
-google charts para charts
-modernizer utilidad para crossbrowsing

modelos mvvm js para UI
-angularjs formularios
-knockout

-usar CDN para cargar repositorios
-abstraer funcionalidades comunes
-loader para que el usuario sepa siempre que peddo con la aplicacion
-agrupacion para namespaces
-utilizar json para paso de parámetros
-no asignar eventos en el html
-evitar las variables globales

================================================================

CSS
librerias
-Normalizer resetea css
-compass normaliza las instrucciones de los diferentes navegadores
-bootstrap
-saas programacion que css no tiene, *mas complejo
-less programacion que css no tiene, implementar en mvc 

-resetear css
-separar los ficheros por funcionalidad
-Usar imágenes con nombre descriptivo
-usar sprites y gestionarlos a parte
-no usar impagenes como textos o fondos
-utilizas tipografias online para originalidad
-utilizarcolores planos o degradados
-mejor usar .class que #id
no anidar más de 3 elementos en css
